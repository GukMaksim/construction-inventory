// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Користувачі
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      UserRole
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  ADMIN
  MANAGER
  FOREMAN
}

// Постачальники
model Supplier {
  id            Int       @id @default(autoincrement())
  name          String
  contactPerson String?
  phone         String?
  email         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  invoices      Invoice[]
}

// Накладні
model Invoice {
  id          Int           @id @default(autoincrement())
  number      String        @unique
  date        DateTime
  supplierId  Int
  supplier    Supplier      @relation(fields: [supplierId], references: [id])
  items       InvoiceItem[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  movements   Movement[]
}

// Позиції накладної
model InvoiceItem {
  id        Int     @id @default(autoincrement())
  invoiceId Int
  invoice   Invoice @relation(fields: [invoiceId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Float
  price     Float
}

// Товари
model Product {
  id            Int           @id @default(autoincrement())
  code          String        @unique
  name          String
  barcode       String?
  unit          String
  price         Float
  minQuantity   Float         @default(0)
  invoiceItems  InvoiceItem[]
  movements     Movement[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

// Об'єкти будівництва
model ConstructionSite {
  id        Int       @id @default(autoincrement())
  name      String
  address   String?
  status    SiteStatus
  sections  Section[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum SiteStatus {
  ACTIVE
  COMPLETED
  SUSPENDED
}

// Розділи об'єкта
model Section {
  id                Int             @id @default(autoincrement())
  name              String
  type              SectionType
  constructionSiteId Int
  constructionSite  ConstructionSite @relation(fields: [constructionSiteId], references: [id])
  parentId         Int?
  parent           Section?        @relation("SectionToSection", fields: [parentId], references: [id])
  children         Section[]       @relation("SectionToSection")
  movements        Movement[]
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

enum SectionType {
  ELECTRICAL
  PLUMBING
}

// Рух товарів
model Movement {
  id            Int       @id @default(autoincrement())
  date          DateTime
  type          MovementType
  quantity      Float
  productId     Int
  product       Product    @relation(fields: [productId], references: [id])
  invoiceId     Int?
  invoice       Invoice?   @relation(fields: [invoiceId], references: [id])
  sectionId     Int?
  section       Section?   @relation(fields: [sectionId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum MovementType {
  IN
  OUT
  TRANSFER
}
